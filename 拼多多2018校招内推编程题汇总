1、最大乘积
给定一个无序数组，包含正数、负数和0，要求从中找出3个数的乘积，使得乘积最大，要求时间复杂度：O(n)，空间复杂度：O(1)
经过分析以后发现无非两种情况，要么排序后最大三个相乘取得最大，要么两个负数一个正数取得最大
class Solution:
    def max_multi(self,N,l):
        if N < 3:
            return None
        l = sorted(l)
        res = max(l[-1]*l[-2]*l[-3],l[0]*l[1]*l[-1])
        return res            
N = int(input())
l = list(map(int,input().split()))
s = Solution()
a = s.max_multi(N,l)
print(a)
